name: FastAPI CI/CD

on:
  # Trigger the workflow on push
  push: 
    branches:
      # push events on main branch
      - main

# The job defines a series of steps that execute on teh same runner
jobs:

  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:
      # checkout repo
      - uses: actions/checkout@v2

      # Step 1: Set up python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # Step 2: Install python virtual environment
      - name: Install Python Virtual Env
        run: pip3 install virtualenv
      
      # Step 3: Set up virtual env
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name: Virtual Env
        uses: actions/cache@v2
        id: cache-venv  # name for referring later
        with:
          path: venv # we cache the virtual env
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: /
            ${{ runner.os }}-venv-
      
      # Step 4: Build a virtual env
      - name: Activate Virtual Env
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
    
      # Step 5: Run tests
      - name: Run Tests
        run: . venv/bin/activate && pytest
      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.10/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add api files to zip file
        run: cd ./api && zip -g ../api.zip -r .
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip
    
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github-ref == 'refs/heads/main' && github.event_name == 'push'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://fastapi-awstest/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapitest --s3-bucket fastapi-awstest --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
